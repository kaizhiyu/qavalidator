
// see: https://github.com/srs/gradle-node-plugin
// Hints on this build setup found here:
// https://objectpartners.com/2016/04/14/using-self-contained-node-js-and-npm-instances-with-gradle/

plugins {
    id "com.moowork.node" version "1.2.0"
}

node {
    // Version of node to use.
    version = '8.12.0'

    // Version of npm to use.
    npmVersion = '6.4.1'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.projectDir}/nodejs")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}")
}

// Define inputs and outputs explicitly so that Gradle knows when (not) to execute the task.
npm_run_buildProd {
    inputs.dir "${project.projectDir}/src"
    outputs.dir "${project.projectDir}/dist"
}

processResources.dependsOn(npmInstall, npm_run_buildProd)

sourceSets.main.resources.srcDirs = ["${project.projectDir}/dist"]

clean.doFirst {
    delete "${project.projectDir}/dist"
}

task veryClean(type: Delete) {
    delete node.workDir, "node_modules", ".gradle/npm"
}

veryClean.dependsOn(clean)


task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from 'src'
    include '**/*.ts', '**/*.html', '**/*.css', '**/*.ico'
}

artifacts {
    archives sourcesJar
}
