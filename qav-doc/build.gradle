buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'org.asciidoctor.convert'

asciidoctor {
    backends 'html5', 'pdf'
    resources {
        from('src/docs/asciidoc') {
            include 'img/**/*.png'
            include 'img/**/*.jpg'
            include 'img/**/*.svg'
        }
    }

    sources {
        include "${project.name}.adoc"
    }

    outputDir "${project.buildDir}"
    options doctype: 'article'
    attributes "tools-dir": "${project.projectDir}/src/layout",
               "revnumber": "${project.version}",
               "revdate": "${new Date().format('dd.MM.yyyy')}",
               "allow-uri-read": true
}

task packageDocumentation(type: Zip) {
    from ("${project.buildDir}/html5") {
        include "**/*.html"
        include "**/*.jpg"
        include "**/*.png"
        include "**/*.svg"
    }
    from ("${project.buildDir}/pdf") {
        include "**/*.pdf"
    }
}

task copyDocToWebsite(type: Copy) {
    from ("${project.buildDir}/html5") {
        include "**/*.html"
        include "**/*.jpg"
        include "**/*.png"
        include "**/*.svg"
    }
    into "../../qavalidator.github.io/static/doc"
}

task cleanDocInWebsite(type: Delete) {
    delete "../../qavalidator.github.io/static/doc"
}


task docSources(type: Jar) {
    archiveClassifier.set 'sources'
    from("${project.projectDir}/src") {
        include "**/*.adoc"
        include "**/*.graphml"
        include "**/*.jpg"
        include "**/*.png"
        include "**/*.svg"
    }
    from("${project.projectDir}/src-gen") {
        include "**/*.adoc"
    }
}

artifacts {
    archives packageDocumentation.archivePath
    archives docSources.archivePath
}

packageDocumentation.dependsOn(asciidoctor)
jar.dependsOn(docSources)
jar.dependsOn(packageDocumentation)
