
plugins {
    id "org.sonarqube" version "2.6"
    id 'net.researchgate.release' version '2.6.0'
    // provides configurations for annotation processing, and passes the annotation processor to
    // the javac "-processorpath" option:
    id "net.ltgt.apt" version "0.13"
    id "com.jfrog.bintray" version "1.8.0"
}

sonarqube {
    properties {
        property "sonar.projectName", "QAvalidator"
        property "sonar.exclusions", "**/*.html,**/*.css,**/*.js"
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'

    // for publishing via Bintray
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    // use this everywhere to ease using Lombok
    apply plugin: 'net.ltgt.apt'

    group = 'de.qaware.qav'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        mavenCentral()
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                // set the properties via -P to publish to your company repo
                repository(url: project.nexusUrl) {
                    authentication(userName: project.nexusUsername, password: project.nexusPassword)
                }
                snapshotRepository(url: project.nexusSnaphotUrl) {
                    authentication(userName: project.nexusUsername, password: project.nexusPassword)
                }
            }
        }
    }

    release {
        failOnCommitNeeded = true
        failOnPublishNeeded = false
        failOnSnapshotDependencies = true
        failOnUnversionedFiles = true
        failOnUpdateNeeded = true
        revertOnFail = true
        preCommitText = '[Gradle Release Plugin] '
        preTagCommitMessage = '- pre tag commit: '
        tagCommitMessage = '- creating tag: '
        newVersionCommitMessage = '- new version commit: '
        tagTemplate = 'release-${version}'
        versionPropertyFile = 'gradle.properties'
        versionProperties = []
        buildTasks = ['build']

        git {
            requireBranch = '' // allow releases from any branch
        }
    }

    afterReleaseBuild.dependsOn uploadArchives

    ext {
        // Version numbers
        springBootVersion = "2.1.0.RELEASE"
        springVersion = "5.1.2.RELEASE"
        springDataVersion = "2.1.2.RELEASE"

        groovyVersion = "2.4.12"
        asmVersion = "5.1"

        jgraphtVersion = "1.0.0"
        luceneVersion = "6.3.0"

        stringtemplateVersion = "3.2"
        antVersion ="1.9.7"

        jacksonVersion = "2.8.9"
        guavaVersion = "20.0"
        commonsLang3Version = "3.5"
        commonsIoVersion = "2.5"

        slf4jVersion = "1.7.25"
        logbackVersion = "1.1.11"

        lombokVersion = "1.16.20"

        // Test dependencies
        googleTestingCompileVersion = '0.10'
        assertjVersion = "3.11.1"
    }

    dependencies {
        // Lombok
        compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
        apt "org.projectlombok:lombok:${project.ext.lombokVersion}"

        // Tests
        testCompile 'junit:junit:4.12'
        testCompile 'org.hamcrest:hamcrest-integration:1.3'
        testCompile 'org.mockito:mockito-core:1.10.19' // Mockito 2 only with Spring Boot >= 1.5
    }

    jacoco {
        toolVersion = "0.8.0"
        reportsDir = file("$buildDir/customJacocoReportDir")
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    // This disables the pedantic doclint feature of JDK8
    if (JavaVersion.current().isJava8Compatible()) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    /*
     * common information for Bintray publishing
     */
    ext {
        pomConfig = {

            inceptionYear '2015'

            scm {
                connection "scm:git:${project.scmUrl}"
                developerConnection "scm:git:${project.scmUrl}"
                url project.websiteUrl
            }

            issueManagement {
                system 'GitHub'
                url project.issueTrackerUrl
            }

            licenses {
                license([:]) {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            organization {
                name 'QAware GmbH'
                url 'https://www.qaware.de'
            }

            developers {
                developer {
                    id 'lreimer'
                    name 'Mario-Leander Reimer'
                    email 'mario-leander.reimer@qaware.de'
                    organization 'QAware GmbH'
                    organizationUrl 'https://www.qaware.de'
                    roles { role 'Developer' }
                }
                developer {
                    id 'tilmanseifert'
                    name 'Tilman Seifert'
                    email 'tilman.seifert@qaware.de'
                    organization 'QAware GmbH'
                    organizationUrl 'https://www.qaware.de'
                    roles { role 'Developer' }
                }
            }
        }
    }
}

task build(description: "no-op task, needed for the release plugin") {}
