
plugins {
    id 'java-gradle-plugin'
}

apply plugin: 'groovy'


dependencies {
    compile gradleApi()
    compile(project(":qav-runner")) {
        exclude group: "ch.qos.logback" // Gradle has its own logging, based on SLF4J.
        exclude group: "commons-logging" // Gradle has its own logging, based on SLF4J.
    }
    compile(project(":dist:qav-app")) {
        exclude group: "ch.qos.logback" // Gradle has its own logging, based on SLF4J.
        exclude group: "commons-logging" // Gradle has its own logging, based on SLF4J.
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
}

publishing {
    publications {
        qavGradlePlugin(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar

            pom.withXml {
                asNode().appendNode('name', "QAvalidator :: ${project.name}")
                asNode().appendNode('description', project.description)
                asNode().appendNode('url', project.websiteUrl)

                asNode().children().last() + project.pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['qavGradlePlugin']
    dryRun = false
    publish = true
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        labels = ['qaware', 'architecture', 'validation']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = project.description
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
            vcsTag = "v${project.version}"
            mavenCentralSync {
                sync = false
            }
        }
    }
}

gradlePlugin {
    plugins {
        qavalidator {
            id = "de.qaware.qav.gradle.qavalidator"
            implementationClass = "de.qaware.qav.gradle.QAvalidatorGradlePlugin"
        }
    }
}