
// see: https://github.com/srs/gradle-node-plugin
// Hints on this build setup found here:
// https://objectpartners.com/2016/04/14/using-self-contained-node-js-and-npm-instances-with-gradle/

plugins {
    id "com.moowork.node" version "1.2.0"
}

node {
    // Version of node to use.
    version = '8.12.0'

    // Version of npm to use.
    npmVersion = '6.4.1'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.projectDir}/nodejs")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}")
}

processResources.dependsOn(npm_install, npm_run_buildProd)

sourceSets.main.resources.srcDirs = ["${project.projectDir}/dist"]

clean.doFirst {
    delete "${project.projectDir}/dist"
}

task veryClean(type: Delete) {
    delete node.workDir, "node_modules", ".gradle/npm"
}

veryClean.dependsOn(clean)


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from 'src'
    include '**/*.ts', '**/*.html', '**/*.html', '**/*.css', '**/*.ico'
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        qavUi(MavenPublication) {
            from components.java
            artifact sourcesJar

            pom.withXml {
                asNode().appendNode('name', "QAvalidator :: ${project.name}")
                asNode().appendNode('description', project.description)
                asNode().appendNode('url', project.websiteUrl)

                asNode().children().last() + project.pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['qavUi']
    dryRun = false
    publish = true
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        labels = ['qaware', 'architecture', 'validation']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = project.description
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
            vcsTag = "v${project.version}"
            mavenCentralSync {
                sync = false
            }
        }
    }
}
